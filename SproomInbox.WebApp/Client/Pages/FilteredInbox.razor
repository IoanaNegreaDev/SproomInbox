@page "/filteredinbox"
@using SproomInbox.WebApp.Shared.Resources.Parametrization;
@using SproomInbox.WebApp.Shared.Resources
@inject HttpClient Http

<h1>Sproom Inbox</h1>

@if (_users != null)
{
    <section class="state-selector">
        <EditForm Model=@FilterParameters>
            <label for="filters">Filters:   </label>            
            <InputSelect id="statusSelectionUser" @bind-Value = "@FilterParameters.UserName" @onclick="() => _needsRefreshing = true">
                <option value=@string.Empty>UserName</option>
                @foreach (var user in _users)
                {
                    <option value="@user.UserName">@user.UserName</option>
                }                                       
                </InputSelect>   
                
                <InputSelect id="statusSelection" @bind-Value = "@FilterParameters.Type" @onclick="() => _needsRefreshing = true">
                    <option value=@String.Empty>Any type</option>
                    <option value="@(DocumentTypeDto.Invoice)">Invoice</option>
                    <option value="@(DocumentTypeDto.CreditNote)">CreditNote</option>                    
                </InputSelect>   
                
                <InputSelect id="statusSelection" @bind-Value = "@FilterParameters.State" @onclick="() => _needsRefreshing = true">
                    <option value=@String.Empty>Any status</option>
                    <option value="@(StateDto.Received)">Received</option>
                    <option value="@(StateDto.Approved)">Approved</option>                    
                    <option value="@(StateDto.Rejected)">Rejected</option>     
                </InputSelect>   
         </EditForm>
    </section>
}
else {
    <p><em>Loading users...</em></p>
}

@if (_needsRefreshing)
{
    <Inbox FilterParameters=FilterParameters />
    _needsRefreshing = false;
}
@code {
    bool _needsRefreshing = false;
} 
